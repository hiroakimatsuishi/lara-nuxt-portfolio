version: '3'

services:
  web:
    build: ./docker/web/ #Dockerfileが存在するディレクトリの相対パス
    ports: #ポートを公開する(ホスト:コンテナ)
    #  - '8000:80' #8000でアクセスされたら、80を使用する ★laravelのポートとかぶるのでコメントアウト
      - '8080:8080' #8080でアクセスされたら、80を使用する
    networks: 
      - app_network
    volumes: #コンテナと共有したいパスを指定
      - ./index.html:/var/www/html/index.html #確認用のhtmlをコンテナ側の/var/wwww/html配下にマウントする
      - ./docker/web/httpd.conf:/usr/local/apache2/conf/httpd.conf #httpd.confを上書きする
      - ./logs:/usr/local/apache2/logs/httpd/ # コンテナに入らず、apacheのlogを見るためマウントしとく
    depends_on: # Service同士の依存関係を指定
      - ui #`docker-compose run`した際にapacheより前にuiコンテナが実行される
    links: #他のコンテナに接続する(コンテナのhostsに追加される)
      - ui
  ui:
    build: 
      context: ./
      dockerfile: ./docker/ui/Dockerfile
    volumes:
      - ./ui:/app
    networks: 
      - app_network
    depends_on:
      - api
    links:
      - api
  api:
    build:
      context: ./
      dockerfile: ./docker/api/Dockerfile
    ports:
      - '8000:8000'
    networks: 
      - app_network
    volumes:
      - ./api:/var/www/html
    depends_on:
      - db
    links:
      - db
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=db
      - PMA_USER=dev
      - PMA_PASSWORD=password
    links:
      - db
    ports:
      - '4040:80'
    networks: 
      - app_network
    volumes:
      - ./phpmyadmin/sessions:/sessions
    depends_on: 
      - db
  db:
    image: mysql:8
    volumes:
      - ./db-store:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./logs:/var/log/mysql
    ports:
      - "4306:3306"
    networks: 
      - app_network
    environment:
      - MYSQL_DATABASE=dev
      - MYSQL_USER=dev
      - MYSQL_PASSWORD=password
      - MYSQL_ROOT_PASSWORD=password

networks: 
  app_network: